import React, { useEffect, useState } from "react";
import Head from "next/head";
import type { NextPage } from "next";

import styles from "../styles/Home.module.css";

import { gql } from "graphql-request";
import { fetcher } from "../lib/fetcher";

import {
  Button,
  Skeleton,
  Tag,
  List,
  Typography,
  Divider,
  Modal,
  message,
} from "antd";
import {
  DeleteOutlined,
  EditOutlined,
  FileAddOutlined,
} from "@ant-design/icons";

const Home: NextPage = () => {
  const [idPost, setIdPost] = useState<number | null>(null);
  const [deleteModal, setDeleteModal] = useState(false);
  const [data, setData] = useState<any>([]);

  const { Title } = Typography;

  const getData = () => {
    fetcher(
      gql`
        query {
          getPosts {
            id
            title
            published
            image
            description
            content
          }
        }
      `,
      {}
    ).then((res) => setData(res));
  };

  useEffect(() => {
    getData();
  }, []);

  const showModal = (id: number) => {
    setDeleteModal(true);
    setIdPost(id);
  };
  const hideModal = () => setDeleteModal(false);
  const deletePost = () => {
    fetcher(
      gql`
        mutation deletePostID($post: DeletePostInput!) {
          deletePost(post: $post)
        }
      `,
      { post: { id: idPost } }
    ).then((res) => {
      getData();
      message.success(res.deletePost);
      hideModal();
    });
  };

  return (
    <div>
      <Head>
        <title>Blog with postgres</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        <div
          style={{
            display: "flex",
            justifyContent: "space-around",
            alignItems: "center",
            marginTop: "10px",
          }}
        >
          <Title level={1} style={{ textAlign: "center" }}>
            CRUD Blog
          </Title>
          <Button icon={<FileAddOutlined />} type="link" href="/create-post">
            Create post
          </Button>
        </div>
        <Divider orientation="right">Read and Learn</Divider>
        <div style={{ height: "100vh", overflow: "auto" }}>
          <List
            itemLayout="vertical"
            size="large"
            dataSource={data?.getPosts?.reverse()}
            renderItem={(item: any) => (
              <List.Item
                key={item?.title}
                actions={
                  !!data
                    ? [
                        <>
                          <Button
                            type="link"
                            href={`/editPost/${item.id}`}
                            icon={<EditOutlined />}
                          >
                            edit post
                          </Button>
                        </>,
                        <>
                          <Button
                            danger
                            onClick={() => showModal(item.id)}
                            icon={<DeleteOutlined />}
                          >
                            delete post
                          </Button>
                        </>,
                      ]
                    : []
                }
                extra={
                  // eslint-disable-next-line @next/next/no-img-element
                  !!data && <img width={272} alt="logo" src={item.image} />
                }
              >
                <Skeleton loading={!item} active avatar>
                  <List.Item.Meta
                    title={
                      <>
                        <a href={item.href}>{item.title}</a>{" "}
                        <Tag
                          style={{ marginLeft: 8 }}
                          color={item.published ? "success" : "error"}
                        >
                          {item.published ? "publico" : "privado"}
                        </Tag>
                      </>
                    }
                    description={item.description}
                  />
                  {item.content}
                </Skeleton>
              </List.Item>
            )}
          />
        </div>
        <Modal
          title="Esta seguro de eliminar este post"
          visible={deleteModal}
          onOk={deletePost}
          onCancel={hideModal}
          okText="Eliminar"
          cancelText="Cancelar"
        >
          <p>
            Si lo eliminas no tendras la posibilidad de recuperar el
            <strong> conocimiento</strong> depositado aqui y{" "}
            <strong>
              otras personas no tendran la posibilidad de acceder a el
            </strong>
          </p>
        </Modal>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://happy-mclean-69df89.netlify.app/"
          target="_blank"
          rel="noopener noreferrer"
          style={{
            display: "flex",
            alignItems: "center",
            gap: 6,
            justifyContent: "center",
          }}
        >
          Powered by{" "}
          <Title level={3} style={{ margin: 0 }}>
            Andres Plaza
          </Title>
        </a>
      </footer>
    </div>
  );
};

export default Home;
